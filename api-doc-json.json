{
  "openapi": "3.0.1",
  "info": {
    "title": "Fixed Asset System API FOR PostgreSQL",
    "version": "3.0"
  },
  "servers": [
    {
      "url": "http://localhost:8370",
      "description": "Generated server url"
    }
  ],
  "security": [
    {
      "auth": []
    }
  ],
  "paths": {
    "/sys/user/updateIcon": {
      "put": {
        "tags": [
          "System User"
        ],
        "summary": "Update avatar",
        "operationId": "repass",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SysUser"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/test/code/listAll": {
      "post": {
        "tags": [
          "Testing Code"
        ],
        "summary": "Page and List",
        "operationId": "listAll",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TestCode"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/test/code/create": {
      "post": {
        "tags": [
          "Testing Code"
        ],
        "summary": "Create",
        "operationId": "create",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TestCode"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/system/country/tax/update": {
      "post": {
        "tags": [
          "Tax Data"
        ],
        "summary": "Update a tax data",
        "operationId": "update",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaxableCountry"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/system/country/tax/listAll": {
      "post": {
        "tags": [
          "Tax Data"
        ],
        "summary": "Page and list",
        "operationId": "listAll_1",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaxableCountry"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/system/country/tax/create": {
      "post": {
        "tags": [
          "Tax Data"
        ],
        "summary": "Create a Tax Data",
        "operationId": "create_1",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaxableCountry"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/system/country/tax/batch-create": {
      "post": {
        "tags": [
          "Tax Data"
        ],
        "summary": "Batch to import tax datas",
        "operationId": "batchCreate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/TaxInformationUploadData"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/sys/user/update": {
      "post": {
        "tags": [
          "System User"
        ],
        "summary": "Update a User",
        "operationId": "update_1",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SysUser"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/sys/user/updatePass": {
      "post": {
        "tags": [
          "System User"
        ],
        "summary": "Save new password",
        "operationId": "updatePass",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PassDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/sys/user/self/repass": {
      "post": {
        "tags": [
          "System User"
        ],
        "summary": "Re password in user self",
        "operationId": "repass_1",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResetPasswordDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/sys/user/save": {
      "post": {
        "tags": [
          "System User"
        ],
        "summary": "Create a User",
        "operationId": "save",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SysUser"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/sys/user/saveRecord": {
      "post": {
        "tags": [
          "System User"
        ],
        "summary": "Save user login record",
        "operationId": "saveRecord",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRecord"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/sys/user/role/{userId}": {
      "post": {
        "tags": [
          "System User"
        ],
        "summary": "Role setting",
        "operationId": "rolePerm",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/sys/user/repass": {
      "post": {
        "tags": [
          "System User"
        ],
        "summary": "Re password",
        "operationId": "repass_2",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/sys/user/list": {
      "post": {
        "tags": [
          "System User"
        ],
        "summary": "Page and list",
        "operationId": "list",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SysUser"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/sys/user/listLoginRecord/{username}": {
      "post": {
        "tags": [
          "System User"
        ],
        "summary": "Get list of user login records by username",
        "operationId": "listRecord",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/sys/user/delete": {
      "post": {
        "tags": [
          "System User"
        ],
        "summary": "Void a User",
        "operationId": "delete",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/sys/role/update": {
      "post": {
        "tags": [
          "System Role"
        ],
        "operationId": "update_2",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SysRole"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/sys/role/save": {
      "post": {
        "tags": [
          "System Role"
        ],
        "summary": "Create",
        "operationId": "save_1",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SysRole"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/sys/role/perm/{roleId}": {
      "post": {
        "tags": [
          "System Role"
        ],
        "summary": "Setting permission by role id",
        "operationId": "info",
        "parameters": [
          {
            "name": "roleId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/sys/role/delete": {
      "post": {
        "tags": [
          "System Role"
        ],
        "summary": "Void by ids",
        "operationId": "info_1",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/sys/menu/update": {
      "post": {
        "tags": [
          "System Menu"
        ],
        "summary": "Update",
        "operationId": "update_3",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SysMenu"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/sys/menu/save": {
      "post": {
        "tags": [
          "System Menu"
        ],
        "summary": "Create",
        "operationId": "save_2",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SysMenu"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/sys/menu/delete/{id}": {
      "post": {
        "tags": [
          "System Menu"
        ],
        "summary": "Void one by id",
        "operationId": "delete_1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/stock/stock_take/upload": {
      "post": {
        "tags": [
          "Stock Take"
        ],
        "summary": "Upload Stock take record",
        "operationId": "uploadExcel",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StockTake"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/stock/stock_take/listAll": {
      "post": {
        "tags": [
          "Stock Take"
        ],
        "summary": "Page and list",
        "operationId": "listAll_2",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StockTake"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/stock/stock_take/item/save": {
      "post": {
        "tags": [
          "Stock Take Item"
        ],
        "summary": "Save stock take item",
        "operationId": "save_3",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StockTakeItem"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/stock/stock_take/item/list": {
      "post": {
        "tags": [
          "Stock Take Item"
        ],
        "summary": "Page and list",
        "operationId": "list_1",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StockTakeItem"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/stock/stock_take/create": {
      "post": {
        "tags": [
          "Stock Take"
        ],
        "summary": "Create",
        "operationId": "create_2",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StockTake"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/chatGPT/chat/text": {
      "post": {
        "tags": [
          "ChatGPT"
        ],
        "summary": "Chat with GPT",
        "operationId": "textChat",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChatGPT"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/base/vendor/update": {
      "post": {
        "tags": [
          "Vendor"
        ],
        "summary": "Update a vendor",
        "operationId": "update_4",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Vendor"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/base/vendor/post/findOne": {
      "post": {
        "tags": [
          "Vendor"
        ],
        "summary": "Find one by vendor code or name",
        "operationId": "findOnePost",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Vendor"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/base/vendor/listAll": {
      "post": {
        "tags": [
          "Vendor"
        ],
        "summary": "Page and list",
        "operationId": "listAll_3",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Vendor"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/base/vendor/create": {
      "post": {
        "tags": [
          "Vendor"
        ],
        "summary": "Create a vendor",
        "operationId": "create_3",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Vendor"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/base/vendor/batch-create": {
      "post": {
        "tags": [
          "Vendor"
        ],
        "summary": "Batch create vendors",
        "operationId": "batchCreate_1",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Vendor"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/base/location/update": {
      "post": {
        "tags": [
          "Location"
        ],
        "summary": "Update a location",
        "operationId": "update_5",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Location"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/base/location/post/findOne": {
      "post": {
        "tags": [
          "Location"
        ],
        "summary": "Find one by place code or name",
        "operationId": "findOnePost_1",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Location"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/base/location/listAll": {
      "post": {
        "tags": [
          "Location"
        ],
        "summary": "Page and list",
        "operationId": "listAll_4",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Location"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/base/location/create": {
      "post": {
        "tags": [
          "Location"
        ],
        "summary": "Create a location",
        "operationId": "create_4",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Location"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/base/location/batch-create": {
      "post": {
        "tags": [
          "Location"
        ],
        "summary": "Batch to import locations",
        "operationId": "batchCreate_2",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Location"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/base/department/update": {
      "post": {
        "tags": [
          "Department"
        ],
        "summary": "Update a department",
        "operationId": "update_6",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Department"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/base/department/post/findOne": {
      "post": {
        "tags": [
          "Department"
        ],
        "summary": "Find one by department code or name",
        "operationId": "findOne",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Department"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/base/department/listAll": {
      "post": {
        "tags": [
          "Department"
        ],
        "summary": "Page and list",
        "operationId": "listAll_5",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Department"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/base/department/create": {
      "post": {
        "tags": [
          "Department"
        ],
        "summary": "Create a department",
        "operationId": "create_5",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Department"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/base/department/batch-create": {
      "post": {
        "tags": [
          "Department"
        ],
        "summary": "Batch to import departments",
        "operationId": "batchCreate_3",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Department"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/base/code_type/update": {
      "post": {
        "tags": [
          "Code Type"
        ],
        "summary": "Update",
        "operationId": "update_7",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CodeType"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/base/code_type/listAll": {
      "post": {
        "tags": [
          "Code Type"
        ],
        "summary": "Page and list",
        "operationId": "listAll_6",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CodeType"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/base/code_type/getAllValue": {
      "post": {
        "tags": [
          "Code Type"
        ],
        "summary": "Get all value by type",
        "operationId": "getAllValue",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CodeType"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/base/code_type/create": {
      "post": {
        "tags": [
          "Code Type"
        ],
        "summary": "Create",
        "operationId": "create_6",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CodeType"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/base/code_type/batch-create": {
      "post": {
        "tags": [
          "Code Type"
        ],
        "summary": "Batch to import",
        "operationId": "batchCreate_4",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CodeType"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/base/budget/create": {
      "post": {
        "tags": [
          "Budget"
        ],
        "summary": "Cteate",
        "operationId": "create_7",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BudgetList"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/base/asset_type/update": {
      "post": {
        "tags": [
          "Asset Type"
        ],
        "summary": "Update a asset type",
        "operationId": "update_8",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssetType"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/base/asset_type/post/findOne": {
      "post": {
        "tags": [
          "Asset Type"
        ],
        "summary": "Find one by asset type code or name",
        "operationId": "findOnePost_2",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssetType"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/base/asset_type/listAll": {
      "post": {
        "tags": [
          "Asset Type"
        ],
        "summary": "Page and list",
        "operationId": "listAll_7",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssetType"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/base/asset_type/create": {
      "post": {
        "tags": [
          "Asset Type"
        ],
        "summary": "Create a asset type",
        "operationId": "create_8",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssetType"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/base/asset_type/batch-create": {
      "post": {
        "tags": [
          "Asset Type"
        ],
        "summary": "Batch create asset types",
        "operationId": "batchCreate_5",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AssetType"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/base/action/listAll": {
      "post": {
        "tags": [
          "Action Record"
        ],
        "summary": "List action records",
        "operationId": "listAll_8",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ActionRecordBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Sucess",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/asset/invRecord/listAll": {
      "post": {
        "tags": [
          "InvReocrd"
        ],
        "summary": "Page and list",
        "operationId": "listAll_9",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FindInvRecordDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/asset/assetList/writeOff": {
      "post": {
        "tags": [
          "Asset List"
        ],
        "summary": "Write Off asset",
        "operationId": "writeItem",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WriteOff"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/asset/assetList/writeOff/listAll": {
      "post": {
        "tags": [
          "Asset List"
        ],
        "summary": "Page and list of write off assets",
        "operationId": "listAllWriteOff",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssetList"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/asset/assetList/update": {
      "post": {
        "tags": [
          "Asset List"
        ],
        "summary": "Update",
        "operationId": "update_9",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssetList"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/asset/assetList/sumCostWithSponsor": {
      "post": {
        "tags": [
          "Asset List"
        ],
        "summary": "Get total cost with Sponsor",
        "operationId": "sumCostWithSponsor",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssetList"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/asset/assetList/report/listAll": {
      "post": {
        "tags": [
          "Asset List"
        ],
        "summary": "List all assets",
        "operationId": "reportListAll",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssetList"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/asset/assetList/loadFile": {
      "post": {
        "tags": [
          "Asset List"
        ],
        "summary": "Loading file",
        "operationId": "loadFile",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssetListFile"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/asset/assetList/listAll": {
      "post": {
        "tags": [
          "Asset List"
        ],
        "summary": "Page and list",
        "operationId": "listAll_10",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssetList"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/asset/assetList/groupByTypeFind": {
      "post": {
        "tags": [
          "Asset List"
        ],
        "summary": "Get all items per types",
        "operationId": "groupByTypeFind",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssetList"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/asset/assetList/getTotalSum": {
      "post": {
        "tags": [
          "Asset List"
        ],
        "summary": "Get total cost",
        "operationId": "getTotalSum",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssetList"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/asset/assetList/getItemYearMonthFind": {
      "post": {
        "tags": [
          "Asset List"
        ],
        "summary": "Get all items per month",
        "operationId": "getItemYearMonthFind",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssetList"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/asset/assetList/getAssetYearQtyTypeFind": {
      "post": {
        "tags": [
          "Asset List"
        ],
        "summary": "Get all items per places and months",
        "operationId": "getAssetYearQtyTypeFind",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssetList"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/asset/assetList/getAssetYearQtyPlaceFind": {
      "post": {
        "tags": [
          "Asset List"
        ],
        "summary": "Get all costs per months",
        "operationId": "getAssetYearQtyPlaceFind",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssetList"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/asset/assetList/getAssetYearQtyDeptFind": {
      "post": {
        "tags": [
          "Asset List"
        ],
        "summary": "Get all items per departments and months",
        "operationId": "getAssetYearQtyDeptFind",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssetList"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/asset/assetList/getAssetYearCostTypeFind": {
      "post": {
        "tags": [
          "Asset List"
        ],
        "summary": "Get all costs per months",
        "operationId": "getAssetYearCostTypeFind",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssetList"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/asset/assetList/getAssetYearCostPlaceFind": {
      "post": {
        "tags": [
          "Asset List"
        ],
        "summary": "Get all costs per months and locations",
        "operationId": "getAssetYearCostPlaceFind",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssetList"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/asset/assetList/getAssetYearCostDeptFind": {
      "post": {
        "tags": [
          "Asset List"
        ],
        "summary": "Get all cost per department",
        "operationId": "assetYearCostDeptFind",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssetList"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/asset/assetList/getAssetGroupPlaceFind": {
      "post": {
        "tags": [
          "Asset List"
        ],
        "summary": "Get all items per places",
        "operationId": "getAssetGroupPlaceFind",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssetList"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/asset/assetList/getAssetCostYearMonthFind": {
      "post": {
        "tags": [
          "Asset List"
        ],
        "summary": "Get all costs per months",
        "operationId": "getAssetCostYearMonthFind",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssetList"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/asset/assetList/findAsset": {
      "post": {
        "tags": [
          "Asset List"
        ],
        "summary": "Find by asset code and name",
        "operationId": "findAsset",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssetList"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/asset/assetList/create": {
      "post": {
        "tags": [
          "Asset List"
        ],
        "summary": "Create",
        "operationId": "create_9",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssetList"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/asset/assetList/batch-create": {
      "post": {
        "tags": [
          "Asset List"
        ],
        "summary": "Batch to import",
        "operationId": "batchCreate_6",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AssetListUploadDataDto"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/asset/assetList/addFile": {
      "post": {
        "tags": [
          "Asset List"
        ],
        "summary": "Upload file",
        "operationId": "addFile",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssetListFile"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/asset/asset-repair/update": {
      "post": {
        "tags": [
          "Asset Repair Record"
        ],
        "summary": "Update",
        "operationId": "update_10",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RepairRecord"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/asset/asset-repair/listAll": {
      "post": {
        "tags": [
          "Asset Repair Record"
        ],
        "summary": "Page and list",
        "operationId": "listAll_11",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RepairRecord"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/asset/asset-repair/create": {
      "post": {
        "tags": [
          "Asset Repair Record"
        ],
        "summary": "Create",
        "operationId": "create_10",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RepairRecord"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/asset/asset-repair/batch-create": {
      "post": {
        "tags": [
          "Asset Repair Record"
        ],
        "summary": "Batch to import Asset Repair Record",
        "operationId": "batchCreate_7",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/RepairRecord"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/test": {
      "get": {
        "tags": [
          "Testing"
        ],
        "summary": "Only test get",
        "operationId": "test",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/test/pass": {
      "get": {
        "tags": [
          "Testing"
        ],
        "summary": "Test Password ",
        "operationId": "pass",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/system/country/tax/{id}": {
      "get": {
        "tags": [
          "Tax Data"
        ],
        "summary": "Get one by id",
        "operationId": "getOne",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/system/country/tax/getAll": {
      "get": {
        "tags": [
          "Tax Data"
        ],
        "summary": "Get all",
        "operationId": "getAll",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/sys/userInfo": {
      "get": {
        "tags": [
          "Auth"
        ],
        "summary": "Get user information",
        "operationId": "userInfo",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/sys/user/info/{id}": {
      "get": {
        "tags": [
          "System User"
        ],
        "summary": "User information getting",
        "operationId": "info_2",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/sys/role/list": {
      "get": {
        "tags": [
          "System Role"
        ],
        "summary": "Get list",
        "operationId": "list_2",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/sys/role/info/{id}": {
      "get": {
        "tags": [
          "System Role"
        ],
        "summary": "Get one by id",
        "operationId": "info_3",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/sys/menu/nav": {
      "get": {
        "tags": [
          "System Menu"
        ],
        "summary": "Get nav menu by username",
        "operationId": "nav",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/sys/menu/list": {
      "get": {
        "tags": [
          "System Menu"
        ],
        "summary": "List by tree",
        "operationId": "list_3",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/sys/menu/info/{id}": {
      "get": {
        "tags": [
          "System Menu"
        ],
        "summary": "Get one by id",
        "operationId": "info_4",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/stock/stock_take/{id}": {
      "get": {
        "tags": [
          "Stock Take"
        ],
        "summary": "Get one by id",
        "operationId": "getOne_1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/stock/stock_take/getAllST": {
      "get": {
        "tags": [
          "Stock Take"
        ],
        "summary": "Get all stock take",
        "operationId": "getAll_1",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/stock/stock_take/getAllFinishedST": {
      "get": {
        "tags": [
          "Stock Take"
        ],
        "summary": "Get all Finished stock take",
        "operationId": "getAllFinished",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/captcha": {
      "get": {
        "tags": [
          "Auth"
        ],
        "summary": "Get a Captcha",
        "operationId": "captcha",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/base/vendor/{id}": {
      "get": {
        "tags": [
          "Vendor"
        ],
        "summary": "Get one by id",
        "operationId": "getOne_2",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/base/vendor/getAll": {
      "get": {
        "tags": [
          "Vendor"
        ],
        "summary": "Get all vendors",
        "operationId": "getAll_2",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/base/location/{id}": {
      "get": {
        "tags": [
          "Location"
        ],
        "summary": "Get one by id",
        "operationId": "getOne_3",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/base/location/getAll": {
      "get": {
        "tags": [
          "Location"
        ],
        "summary": "Get all locations",
        "operationId": "getAll_3",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/base/field/match/{category}/{type}": {
      "get": {
        "tags": [
          "Excel Field Match"
        ],
        "summary": "Get by category and type",
        "operationId": "findBqQuery",
        "parameters": [
          {
            "name": "category",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "type",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/base/field/match/category/{category}": {
      "get": {
        "tags": [
          "Excel Field Match"
        ],
        "summary": "Get by category",
        "operationId": "findByCategory",
        "parameters": [
          {
            "name": "category",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/base/department/{id}": {
      "get": {
        "tags": [
          "Department"
        ],
        "summary": "Get one by id",
        "operationId": "getOne_4",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/base/department/getAll": {
      "get": {
        "tags": [
          "Department"
        ],
        "summary": "Get all departments",
        "operationId": "getAll_4",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/base/code_type/{id}": {
      "get": {
        "tags": [
          "Code Type"
        ],
        "summary": "Get one by id",
        "operationId": "getOne_5",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/base/asset_type/{id}": {
      "get": {
        "tags": [
          "Asset Type"
        ],
        "summary": "Get one by id",
        "operationId": "getOne_6",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/base/asset_type/getAll": {
      "get": {
        "tags": [
          "Asset Type"
        ],
        "summary": "Get all asset types",
        "operationId": "getAll_5",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/asset/assetList/{id}": {
      "get": {
        "tags": [
          "Asset List"
        ],
        "summary": "Get one by id",
        "operationId": "getOne_7",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/asset/assetList/getCostWithDept": {
      "get": {
        "tags": [
          "Asset List"
        ],
        "summary": "Get cost with department",
        "operationId": "getCostWithDept",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/asset/assetList/assetCode/{assetCode}": {
      "get": {
        "tags": [
          "Asset List"
        ],
        "summary": "Get one by asset code",
        "operationId": "getOneByAssetCode",
        "parameters": [
          {
            "name": "assetCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/asset/asset-repair/{id}": {
      "get": {
        "tags": [
          "Asset Repair Record"
        ],
        "summary": "Get one by id",
        "operationId": "getOne_8",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/system/country/tax/remove/{id}": {
      "delete": {
        "tags": [
          "Tax Data"
        ],
        "summary": "Void one by id",
        "operationId": "voidOne",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/sys/role/void/{id}": {
      "delete": {
        "tags": [
          "System Role"
        ],
        "operationId": "voidById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/stock/stock_take/remove/{id}": {
      "delete": {
        "tags": [
          "Stock Take"
        ],
        "summary": "Void one by id",
        "operationId": "remove",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/stock/stock_take/finish/{id}": {
      "delete": {
        "tags": [
          "Stock Take"
        ],
        "summary": "Finish one by id",
        "operationId": "finished",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/base/vendor/remove/{id}": {
      "delete": {
        "tags": [
          "Vendor"
        ],
        "summary": "Void one by id",
        "operationId": "remove_1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/base/location/remove/{id}": {
      "delete": {
        "tags": [
          "Location"
        ],
        "summary": "Void one by id",
        "operationId": "remove_2",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/base/department/remove/{id}": {
      "delete": {
        "tags": [
          "Department"
        ],
        "summary": "Void one by id",
        "operationId": "remove_3",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/base/code_type/remove/{id}": {
      "delete": {
        "tags": [
          "Code Type"
        ],
        "summary": "Void one by id",
        "operationId": "remove_4",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/base/asset_type/remove/{id}": {
      "delete": {
        "tags": [
          "Asset Type"
        ],
        "summary": "Void one by id",
        "operationId": "remove_5",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/asset/assetList/removeFile/{id}": {
      "delete": {
        "tags": [
          "Asset List"
        ],
        "summary": "Loading file",
        "operationId": "removeFile",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/asset/assetList/remove/{id}": {
      "delete": {
        "tags": [
          "Asset List"
        ],
        "summary": "Void one by id",
        "operationId": "remove_6",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    },
    "/asset/asset-repair/remove/{id}": {
      "delete": {
        "tags": [
          "Asset Repair Record"
        ],
        "summary": "Void one by id",
        "operationId": "voidOne_1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Result"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Result": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "description": "HTTP Response Code",
            "format": "int32"
          },
          "msg": {
            "type": "string",
            "description": "HTTP Response Message"
          },
          "data": {
            "type": "object",
            "description": "HTTP Response Data"
          }
        }
      },
      "SysRole": {
        "required": [
          "code",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "The data id, Only apply for response and update apis",
            "format": "int64"
          },
          "created": {
            "type": "string",
            "description": "Created date time,Only apply for response",
            "format": "date-time"
          },
          "updated": {
            "type": "string",
            "description": "Updated date time, Only apply for response",
            "format": "date-time"
          },
          "statu": {
            "type": "integer",
            "description": "Active status, 1 = Active, 0 = Void, Only apply for response",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "description": "The data id, Only apply for response and update apis"
          },
          "code": {
            "type": "string",
            "description": "The role code"
          },
          "remark": {
            "type": "string",
            "description": "Remark"
          },
          "menuIds": {
            "type": "array",
            "description": "Listing menu ids, Only apply for response",
            "items": {
              "type": "integer",
              "description": "Listing menu ids, Only apply for response",
              "format": "int64"
            }
          }
        },
        "description": "System Role lists,Only apply for response"
      },
      "SysUser": {
        "required": [
          "email",
          "username"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "The data id, Only apply for response and update apis",
            "format": "int64"
          },
          "created": {
            "type": "string",
            "description": "Created date time,Only apply for response",
            "format": "date-time"
          },
          "updated": {
            "type": "string",
            "description": "Updated date time, Only apply for response",
            "format": "date-time"
          },
          "statu": {
            "type": "integer",
            "description": "Active status, 1 = Active, 0 = Void, Only apply for response",
            "format": "int32"
          },
          "username": {
            "type": "string",
            "description": "Username"
          },
          "password": {
            "type": "string",
            "description": "Passeord, use BCrypt encoder"
          },
          "avatar": {
            "type": "string",
            "description": "Avatar URL, Useless"
          },
          "deptId": {
            "type": "integer",
            "description": "Department ID",
            "format": "int32"
          },
          "avatarBase64": {
            "type": "string",
            "description": "Avatar image base64 code"
          },
          "email": {
            "type": "string",
            "description": "Email address"
          },
          "city": {
            "type": "string",
            "description": "City Code"
          },
          "lastLogin": {
            "type": "string",
            "description": "Last Login",
            "format": "date-time"
          },
          "sysRoles": {
            "type": "array",
            "description": "System Role lists,Only apply for response",
            "items": {
              "$ref": "#/components/schemas/SysRole"
            }
          },
          "page": {
            "type": "integer",
            "description": "Only apply for paging in list api",
            "format": "int32"
          },
          "limit": {
            "type": "integer",
            "description": "Only apply for paging in list api",
            "format": "int32"
          }
        }
      },
      "TestCode": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "The data id, Only apply for response or update api",
            "format": "int64"
          },
          "testCode": {
            "type": "string",
            "description": "The test code Only apply for response"
          },
          "test": {
            "type": "string",
            "description": "The test data entry"
          },
          "page": {
            "type": "integer",
            "description": "Only apply for paging in list api",
            "format": "int32"
          },
          "limit": {
            "type": "integer",
            "description": "Only apply for paging in list api",
            "format": "int32"
          }
        }
      },
      "TaxableCountry": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "The data id, Only apply for response and update apis",
            "format": "int64"
          },
          "created": {
            "type": "string",
            "description": "Created date time,Only apply for response",
            "format": "date-time"
          },
          "updated": {
            "type": "string",
            "description": "Updated date time, Only apply for response",
            "format": "date-time"
          },
          "statu": {
            "type": "integer",
            "description": "Active status, 1 = Active, 0 = Void, Only apply for response",
            "format": "int32"
          },
          "nationCode": {
            "type": "string",
            "description": "Nation Code"
          },
          "nationName": {
            "type": "string",
            "description": "Nation Name"
          },
          "countryCode": {
            "type": "string",
            "description": "Country Code"
          },
          "countryName": {
            "type": "string",
            "description": "Country Name"
          },
          "taxType": {
            "type": "string",
            "description": "Tax Type"
          },
          "taxCode": {
            "type": "string",
            "description": "Tax Code"
          },
          "taxName": {
            "type": "string",
            "description": "Tax Name"
          },
          "taxRate": {
            "type": "number",
            "description": "Tax Rate",
            "format": "double"
          },
          "importRate": {
            "type": "number",
            "description": "Import Tax Rate",
            "format": "double"
          },
          "page": {
            "type": "integer",
            "description": "Only apply for paging in list api",
            "format": "int32"
          },
          "limit": {
            "type": "integer",
            "description": "Only apply for paging in list api",
            "format": "int32"
          }
        }
      },
      "TaxInformationUploadData": {
        "type": "object",
        "properties": {
          "nationCode": {
            "type": "string",
            "description": "Nation Code"
          },
          "nationName": {
            "type": "string",
            "description": "Nation Name"
          },
          "countryCode": {
            "type": "string",
            "description": "Country Code"
          },
          "countryName": {
            "type": "string",
            "description": "Country Name"
          },
          "taxType": {
            "type": "string",
            "description": "Tax Type"
          },
          "taxCode": {
            "type": "string",
            "description": "Tax Code"
          },
          "taxName": {
            "type": "string",
            "description": "Tax Name"
          },
          "taxRate": {
            "type": "number",
            "description": "Tax Rate",
            "format": "double"
          },
          "importRate": {
            "type": "number",
            "description": "Import Tax Rate",
            "format": "double"
          }
        }
      },
      "PassDto": {
        "required": [
          "currentPass",
          "password"
        ],
        "type": "object",
        "properties": {
          "password": {
            "type": "string",
            "description": "New Password"
          },
          "currentPass": {
            "type": "string",
            "description": "Old Password"
          }
        }
      },
      "ResetPasswordDto": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "description": "Username"
          },
          "newPassword": {
            "type": "string",
            "description": "New Password"
          }
        }
      },
      "LoginRecord": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "The data id, Only apply for response",
            "format": "int64"
          },
          "username": {
            "type": "string",
            "description": "Username"
          },
          "loginTime": {
            "type": "string",
            "description": "Login Date Time Stamp",
            "format": "date-time"
          },
          "loginStatus": {
            "type": "string",
            "description": "Login Status"
          },
          "ipAddress": {
            "type": "string",
            "description": "IP Address"
          },
          "page": {
            "type": "integer",
            "description": "Only apply for paging in list api",
            "format": "int32"
          },
          "limit": {
            "type": "integer",
            "description": "Only apply for paging in list api",
            "format": "int32"
          }
        }
      },
      "SysMenu": {
        "required": [
          "name",
          "parentId",
          "perms",
          "type"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "The data id, Only apply for response and update apis",
            "format": "int64"
          },
          "created": {
            "type": "string",
            "description": "Created date time,Only apply for response",
            "format": "date-time"
          },
          "updated": {
            "type": "string",
            "description": "Updated date time, Only apply for response",
            "format": "date-time"
          },
          "statu": {
            "type": "integer",
            "description": "Active status, 1 = Active, 0 = Void, Only apply for response",
            "format": "int32"
          },
          "parentId": {
            "type": "integer",
            "description": "The upper-level menu item id",
            "format": "int64"
          },
          "name": {
            "type": "string",
            "description": "The Menu name"
          },
          "path": {
            "type": "string",
            "description": "The URL"
          },
          "perms": {
            "type": "string",
            "description": "The perms code"
          },
          "component": {
            "type": "string",
            "description": "The component path"
          },
          "type": {
            "type": "integer",
            "description": "0：main   1：item   2：button",
            "format": "int32"
          },
          "icon": {
            "type": "string",
            "description": "The icon string"
          },
          "orderNum": {
            "type": "integer",
            "description": "The sorting order number",
            "format": "int32"
          },
          "index": {
            "type": "string",
            "description": "The index, Only apply for response"
          },
          "children": {
            "type": "array",
            "description": "The sub meun list, Only apply for response",
            "items": {
              "$ref": "#/components/schemas/SysMenu"
            }
          }
        }
      },
      "StockTake": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "The data id, Only apply for response and update apis",
            "format": "int64"
          },
          "actionName": {
            "type": "string",
            "description": "The stock take action name"
          },
          "actionPlace": {
            "type": "integer",
            "description": "Location Id for action",
            "format": "int32"
          },
          "createdTime": {
            "type": "string",
            "description": "Stock take created time, Only apply for response",
            "format": "date-time"
          },
          "finishTime": {
            "type": "string",
            "description": "Stock take finished time, Only apply for response",
            "format": "date-time"
          },
          "active": {
            "type": "integer",
            "description": "Stock take status, 0 = Void, 1 = Active, 2 = Finished",
            "format": "int32"
          },
          "page": {
            "type": "integer",
            "description": "Only apply for paging in list api",
            "format": "int32"
          },
          "limit": {
            "type": "integer",
            "description": "Only apply for paging in list api",
            "format": "int32"
          },
          "stockTakeItems": {
            "type": "array",
            "description": "Stock take items list, Only apply for response",
            "items": {
              "$ref": "#/components/schemas/StockTakeItem"
            }
          },
          "stockTakeItemRecords": {
            "type": "array",
            "description": "Stock take items list, Only apply for requesr in save",
            "items": {
              "$ref": "#/components/schemas/StockTakeItemListRecord"
            }
          }
        }
      },
      "StockTakeItem": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "The data id, Only apply for response",
            "format": "int64"
          },
          "stockTakeId": {
            "type": "integer",
            "description": "The stock take id",
            "format": "int32"
          },
          "assetId": {
            "type": "integer",
            "description": "The asset data id",
            "format": "int32"
          },
          "assetCode": {
            "type": "string",
            "description": "The asset code"
          },
          "placeId": {
            "type": "integer",
            "description": "The location data Id",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "description": "Assset Status Detail"
          },
          "checkTime": {
            "type": "string",
            "description": "Asset Check Time, Only apply for response",
            "format": "date-time"
          },
          "remark": {
            "type": "string",
            "description": "Remark"
          },
          "page": {
            "type": "integer",
            "description": "Only apply for paging in list api",
            "format": "int32"
          },
          "limit": {
            "type": "integer",
            "description": "Only apply for paging in list api",
            "format": "int32"
          }
        },
        "description": "Stock take items list, Only apply for response"
      },
      "StockTakeItemListRecord": {
        "type": "object",
        "properties": {
          "assetCode": {
            "type": "string",
            "description": "The asset code"
          },
          "placeName": {
            "type": "string",
            "description": "The location name"
          },
          "placeCode": {
            "type": "string",
            "description": "The location code"
          },
          "remark": {
            "type": "string",
            "description": "Remark for item stock take"
          }
        },
        "description": "Stock take items list, Only apply for requesr in save"
      },
      "ChatGPT": {
        "type": "object",
        "properties": {
          "enteyText": {
            "type": "string"
          }
        }
      },
      "Vendor": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "The data id, Only apply for response and update apis",
            "format": "int64"
          },
          "created": {
            "type": "string",
            "description": "Created date time,Only apply for response",
            "format": "date-time"
          },
          "updated": {
            "type": "string",
            "description": "Updated date time, Only apply for response",
            "format": "date-time"
          },
          "statu": {
            "type": "integer",
            "description": "Active status, 1 = Active, 0 = Void, Only apply for response",
            "format": "int32"
          },
          "vendorCode": {
            "type": "string",
            "description": "Vendor Code"
          },
          "vendorName": {
            "type": "string",
            "description": "Vendor Name"
          },
          "vendorOtherName": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "description": "Type"
          },
          "email": {
            "type": "string",
            "description": "Email Address"
          },
          "phone": {
            "type": "string",
            "description": "Phone Number"
          },
          "fax": {
            "type": "string",
            "description": "Fax Number"
          },
          "address": {
            "type": "string",
            "description": "Vendor Address"
          },
          "contactPerson": {
            "type": "string",
            "description": "Contact Person Name/Position"
          },
          "remark": {
            "type": "string",
            "description": "Remark"
          },
          "page": {
            "type": "integer",
            "description": "Only apply for paging in list api",
            "format": "int32"
          },
          "limit": {
            "type": "integer",
            "description": "Only apply for paging in list api",
            "format": "int32"
          }
        }
      },
      "Location": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "The data id, Only apply for response and update apis",
            "format": "int64"
          },
          "created": {
            "type": "string",
            "description": "Created date time,Only apply for response",
            "format": "date-time"
          },
          "updated": {
            "type": "string",
            "description": "Updated date time, Only apply for response",
            "format": "date-time"
          },
          "statu": {
            "type": "integer",
            "description": "Active status, 1 = Active, 0 = Void, Only apply for response",
            "format": "int32"
          },
          "placeCode": {
            "type": "string",
            "description": "The place code"
          },
          "placeName": {
            "type": "string",
            "description": "The place name"
          },
          "flexData": {
            "type": "string",
            "description": "Flex data, only for string from json format data"
          },
          "remark": {
            "type": "string",
            "description": "The remark"
          },
          "page": {
            "type": "integer",
            "description": "Only apply for paging in list api",
            "format": "int32"
          },
          "limit": {
            "type": "integer",
            "description": "Only apply for paging in list api",
            "format": "int32"
          }
        }
      },
      "Department": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "The data id, Only apply for response and update apis",
            "format": "int64"
          },
          "created": {
            "type": "string",
            "description": "Created date time,Only apply for response",
            "format": "date-time"
          },
          "updated": {
            "type": "string",
            "description": "Updated date time, Only apply for response",
            "format": "date-time"
          },
          "statu": {
            "type": "integer",
            "description": "Active status, 1 = Active, 0 = Void, Only apply for response",
            "format": "int32"
          },
          "deptCode": {
            "type": "string",
            "description": "The department code"
          },
          "deptName": {
            "type": "string",
            "description": "The department name"
          },
          "deptOtherName": {
            "type": "string",
            "description": "The department other name"
          },
          "deptRemark": {
            "type": "string",
            "description": "The remark"
          },
          "page": {
            "type": "integer",
            "description": "Only apply for paging in list api",
            "format": "int32"
          },
          "limit": {
            "type": "integer",
            "description": "Only apply for paging in list api",
            "format": "int32"
          }
        }
      },
      "CodeType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "The data id, Only apply for response and update apis",
            "format": "int64"
          },
          "created": {
            "type": "string",
            "description": "Created date time,Only apply for response",
            "format": "date-time"
          },
          "updated": {
            "type": "string",
            "description": "Updated date time, Only apply for response",
            "format": "date-time"
          },
          "statu": {
            "type": "integer",
            "description": "Active status, 1 = Active, 0 = Void, Only apply for response",
            "format": "int32"
          },
          "type": {
            "type": "string",
            "description": "The categroy type"
          },
          "valueCode": {
            "type": "string",
            "description": "The value code"
          },
          "valueName": {
            "type": "string",
            "description": "The value name"
          },
          "page": {
            "type": "integer",
            "description": "Only apply for paging in list api",
            "format": "int32"
          },
          "limit": {
            "type": "integer",
            "description": "Only apply for paging in list api",
            "format": "int32"
          }
        }
      },
      "BudgetList": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "The data id, Only apply for response and update apis",
            "format": "int64"
          },
          "created": {
            "type": "string",
            "description": "Created date time,Only apply for response",
            "format": "date-time"
          },
          "updated": {
            "type": "string",
            "description": "Updated date time, Only apply for response",
            "format": "date-time"
          },
          "statu": {
            "type": "integer",
            "description": "Active status, 1 = Active, 0 = Void, Only apply for response",
            "format": "int32"
          },
          "budgetMonth": {
            "type": "integer",
            "description": "Month budget",
            "format": "int32"
          },
          "budgetName": {
            "type": "string",
            "description": "Location Name"
          },
          "budgetAmount": {
            "type": "integer",
            "description": "Budget Amount",
            "format": "int32"
          },
          "budgetFrom": {
            "type": "string",
            "description": "Budget Date Range From ",
            "format": "date-time"
          },
          "budgetTo": {
            "type": "string",
            "description": "Budget Date Range To ",
            "format": "date-time"
          },
          "budgetStatus": {
            "type": "string",
            "description": "Budget Status"
          }
        }
      },
      "AssetType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "The data id, Only apply for response and update apis",
            "format": "int64"
          },
          "created": {
            "type": "string",
            "description": "Created date time,Only apply for response",
            "format": "date-time"
          },
          "updated": {
            "type": "string",
            "description": "Updated date time, Only apply for response",
            "format": "date-time"
          },
          "statu": {
            "type": "integer",
            "description": "Active status, 1 = Active, 0 = Void, Only apply for response",
            "format": "int32"
          },
          "typeCode": {
            "type": "string",
            "description": "The type code"
          },
          "typeName": {
            "type": "string",
            "description": "The type name"
          },
          "typeOtherName": {
            "type": "string",
            "description": "The type other name"
          },
          "remark": {
            "type": "string",
            "description": "The remark"
          },
          "page": {
            "type": "integer",
            "description": "Only apply for paging in list api",
            "format": "int32"
          },
          "limit": {
            "type": "integer",
            "description": "Only apply for paging in list api",
            "format": "int32"
          }
        }
      },
      "ActionRecordBody": {
        "type": "object",
        "properties": {
          "page": {
            "type": "integer",
            "description": "Only apply for paging in list api",
            "format": "int32"
          },
          "limit": {
            "type": "integer",
            "description": "Only apply for paging in list api",
            "format": "int32"
          }
        }
      },
      "FindInvRecordDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "The data id, Only apply for response and update apis",
            "format": "int64"
          },
          "created": {
            "type": "string",
            "description": "Created date time,Only apply for response",
            "format": "date-time"
          },
          "updated": {
            "type": "string",
            "description": "Updated date time, Only apply for response",
            "format": "date-time"
          },
          "statu": {
            "type": "integer",
            "description": "Active status, 1 = Active, 0 = Void, Only apply for response",
            "format": "int32"
          },
          "assetCode": {
            "type": "string",
            "description": "The aaset code"
          },
          "placeFrom": {
            "type": "integer",
            "description": "From of the location id",
            "format": "int32"
          },
          "placeTo": {
            "type": "integer",
            "description": "To of the location id",
            "format": "int32"
          },
          "staffId": {
            "type": "integer",
            "description": "Staff Id",
            "format": "int32"
          },
          "page": {
            "type": "integer",
            "description": "Only apply for paging in list api",
            "format": "int32"
          },
          "limit": {
            "type": "integer",
            "description": "Only apply for paging in list api",
            "format": "int32"
          },
          "createdTo": {
            "type": "string",
            "description": "Create date time form",
            "format": "date-time"
          },
          "createdFrom": {
            "type": "string",
            "description": "Create date time to",
            "format": "date-time"
          }
        }
      },
      "WriteOff": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "The data id, Only apply for response and update apis",
            "format": "int64"
          },
          "assetId": {
            "type": "integer",
            "description": "The asset data Id",
            "format": "int32"
          },
          "lastPlaceId": {
            "type": "integer",
            "description": "The place Id in the last location",
            "format": "int32"
          },
          "reason": {
            "type": "string",
            "description": "Write off reason"
          },
          "lastDay": {
            "type": "string",
            "description": "Last write off date stamp",
            "format": "date-time"
          },
          "page": {
            "type": "integer",
            "description": "Only apply for paging in list api",
            "format": "int32"
          },
          "limit": {
            "type": "integer",
            "description": "Only apply for paging in list api",
            "format": "int32"
          }
        }
      },
      "AssetList": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "The data id, Only apply for response and update apis",
            "format": "int64"
          },
          "created": {
            "type": "string",
            "description": "Created date time,Only apply for response",
            "format": "date-time"
          },
          "updated": {
            "type": "string",
            "description": "Updated date time, Only apply for response",
            "format": "date-time"
          },
          "statu": {
            "type": "integer",
            "description": "Active status, 1 = Active, 0 = Void, Only apply for response",
            "format": "int32"
          },
          "assetCode": {
            "type": "string",
            "description": "Asset Code"
          },
          "assetName": {
            "type": "string",
            "description": "Asset Name"
          },
          "typeId": {
            "type": "integer",
            "description": "Asset Type ID",
            "format": "int32"
          },
          "unit": {
            "type": "string",
            "description": "Unit"
          },
          "buyDate": {
            "type": "string",
            "description": "Purchase Date",
            "format": "date-time"
          },
          "description": {
            "type": "string",
            "description": "Description"
          },
          "sponsor": {
            "type": "integer",
            "description": "1 = With sponsor, 0 = Without sponsor",
            "format": "int32"
          },
          "sponsorName": {
            "type": "string",
            "description": "Sponsor name"
          },
          "cost": {
            "type": "number",
            "description": "Cost",
            "format": "double"
          },
          "serialNum": {
            "type": "string",
            "description": "Item Serial No."
          },
          "invoiceNo": {
            "type": "string",
            "description": "Invoice No."
          },
          "invoiceDate": {
            "type": "string",
            "description": "Invoice Date",
            "format": "date-time"
          },
          "invoiceRemark": {
            "type": "string",
            "description": "Invoice Remark"
          },
          "placeId": {
            "type": "integer",
            "description": "Location Data Id",
            "format": "int32"
          },
          "deptId": {
            "type": "integer",
            "description": "Department Data Id",
            "format": "int32"
          },
          "staffId": {
            "type": "string",
            "description": "Staff Id"
          },
          "vendorId": {
            "type": "integer",
            "description": "Vendor Id",
            "format": "int32"
          },
          "remark": {
            "type": "string",
            "description": "Remark"
          },
          "taxCountryCode": {
            "type": "string",
            "description": "Tax Country Code"
          },
          "taxCode": {
            "type": "string",
            "description": "Tax Code"
          },
          "taxRate": {
            "type": "number",
            "description": "Tax Rate",
            "format": "double"
          },
          "includeTax": {
            "type": "boolean",
            "description": "1 = Cost plus tax, 0 = Cost without tax"
          },
          "afterBeforeTax": {
            "type": "number",
            "description": "After or before tax",
            "format": "double"
          },
          "accountCode": {
            "type": "string",
            "description": "Account Code"
          },
          "accountName": {
            "type": "string",
            "description": "Account Name"
          },
          "brandCode": {
            "type": "string",
            "description": "Brand Code"
          },
          "brandName": {
            "type": "string",
            "description": "Brand Name"
          },
          "chequeNo": {
            "type": "string",
            "description": "Cheque No."
          },
          "maintenancePeriodStart": {
            "type": "string",
            "description": "Maintenance Period Range Start",
            "format": "date-time"
          },
          "maintenancePeriodEnd": {
            "type": "string",
            "description": "Maintenance Period Range End",
            "format": "date-time"
          },
          "voucherNo": {
            "type": "string",
            "description": "Voucher no."
          },
          "voucherUsedDate": {
            "type": "string",
            "description": "Voucher Used Date",
            "format": "date-time"
          },
          "page": {
            "type": "integer",
            "description": "Only apply for paging in list api",
            "format": "int32"
          },
          "limit": {
            "type": "integer",
            "description": "Only apply for paging in list api",
            "format": "int32"
          },
          "buyDateTo": {
            "type": "string",
            "description": "Only apply for paging in list api, Purchase Date Range To"
          },
          "buyDateFrom": {
            "type": "string",
            "description": "Only apply for paging in list api, Purchase Date Range From"
          },
          "assetListFiles": {
            "type": "array",
            "description": "Only apply for response, files list",
            "items": {
              "$ref": "#/components/schemas/AssetListFile"
            }
          },
          "newAssetListFiles": {
            "type": "array",
            "description": "Only apply for request, files list for add",
            "items": {
              "$ref": "#/components/schemas/AssetListFile"
            }
          }
        }
      },
      "AssetListFile": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "The data id, Only apply for response and update apis",
            "format": "int64"
          },
          "created": {
            "type": "string",
            "description": "Created date time,Only apply for response",
            "format": "date-time"
          },
          "updated": {
            "type": "string",
            "description": "Updated date time, Only apply for response",
            "format": "date-time"
          },
          "statu": {
            "type": "integer",
            "description": "Active status, 1 = Active, 0 = Void, Only apply for response",
            "format": "int32"
          },
          "assetId": {
            "type": "integer",
            "description": "The asset data id",
            "format": "int32"
          },
          "fileName": {
            "type": "string",
            "description": "Uploaded file name"
          },
          "base64": {
            "type": "string",
            "description": "File content in base64"
          }
        },
        "description": "Only apply for request, files list for add"
      },
      "AssetListUploadDataDto": {
        "type": "object",
        "properties": {
          "assetCode": {
            "type": "string",
            "description": "Asset Code"
          },
          "assetName": {
            "type": "string",
            "description": "Asset Name"
          },
          "typeCode": {
            "type": "string",
            "description": "Asset Type Code"
          },
          "typeName": {
            "type": "string",
            "description": "Asset Type Name"
          },
          "unit": {
            "type": "string",
            "description": "Unit"
          },
          "buyDate": {
            "type": "string",
            "description": "Purchase Date",
            "format": "date-time"
          },
          "description": {
            "type": "string",
            "description": "Description"
          },
          "sponsor": {
            "type": "string",
            "description": "Yes or No"
          },
          "sponsorName": {
            "type": "string",
            "description": "Sponsor name"
          },
          "cost": {
            "type": "number",
            "description": "Cost",
            "format": "double"
          },
          "serialNum": {
            "type": "string",
            "description": "Item Serial No."
          },
          "invoiceNo": {
            "type": "string",
            "description": "Invoice No."
          },
          "invoiceDate": {
            "type": "string",
            "description": "Invoice Date",
            "format": "date-time"
          },
          "invoiceRemark": {
            "type": "string",
            "description": "Invoice Remark"
          },
          "deptCode": {
            "type": "string",
            "description": "Department Code"
          },
          "deptName": {
            "type": "string",
            "description": "Department Name"
          },
          "placeCode": {
            "type": "string",
            "description": "Location Code"
          },
          "placeName": {
            "type": "string",
            "description": "Location Name"
          },
          "vendorCode": {
            "type": "string",
            "description": "Vendor Code"
          },
          "vendorName": {
            "type": "string",
            "description": "Vendor Name"
          },
          "vendorOtherName": {
            "type": "string",
            "description": "Vendor Other Name"
          },
          "vendorType": {
            "type": "string",
            "description": "Vendor Type"
          },
          "vendorEmail": {
            "type": "string",
            "description": "Vendor Email"
          },
          "vendorPhone": {
            "type": "string",
            "description": "Vendor Phone"
          },
          "vendorFax": {
            "type": "string",
            "description": "Vendor Fax"
          },
          "vendorAddress": {
            "type": "string",
            "description": "Vendor Address"
          },
          "vendorContactPerson": {
            "type": "string",
            "description": "Vendor Contact Person Name"
          },
          "vendorRemark": {
            "type": "string",
            "description": "Vendor Remark"
          },
          "taxCountryCode": {
            "type": "string",
            "description": "Tax Country Code"
          },
          "taxCode": {
            "type": "string",
            "description": "Tax Code"
          },
          "taxRate": {
            "type": "number",
            "description": "Tax Rate",
            "format": "double"
          },
          "includeTax": {
            "type": "string",
            "description": "Yes or No"
          },
          "afterBeforeTax": {
            "type": "number",
            "description": "After or before tax",
            "format": "double"
          },
          "accountCode": {
            "type": "string",
            "description": "Account Code"
          },
          "accountName": {
            "type": "string",
            "description": "Account Name"
          },
          "brandCode": {
            "type": "string",
            "description": "Brand Code"
          },
          "brandName": {
            "type": "string",
            "description": "Brand Name"
          },
          "chequeNo": {
            "type": "string",
            "description": "Cheque No."
          },
          "maintenancePeriodStart": {
            "type": "string",
            "description": "Maintenance Period Range Start",
            "format": "date-time"
          },
          "maintenancePeriodEnd": {
            "type": "string",
            "description": "Maintenance Period Range End",
            "format": "date-time"
          },
          "voucherNo": {
            "type": "string",
            "description": "Voucher no."
          },
          "voucherUsedDate": {
            "type": "string",
            "description": "Voucher Used Date",
            "format": "date-time"
          },
          "remark": {
            "type": "string",
            "description": "Remark"
          }
        }
      },
      "RepairRecord": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "The data id, Only apply for response and update apis",
            "format": "int64"
          },
          "assetId": {
            "type": "integer",
            "description": "The asset data Id",
            "format": "int32"
          },
          "repairReason": {
            "type": "string",
            "description": "The asset repair reason"
          },
          "maintenanceReriod": {
            "type": "integer",
            "description": "1= Within maintenance period status, 0 = Non of maintenance period status",
            "format": "int32"
          },
          "maintenanceName": {
            "type": "string",
            "description": "Maintenance person name"
          },
          "maintenanceDate": {
            "type": "string",
            "description": "Maintenance date",
            "format": "date-time"
          },
          "maintenanceFinishDate": {
            "type": "string",
            "description": "Finish maintenance date",
            "format": "date-time"
          },
          "repairInvoiceDate": {
            "type": "string",
            "description": "Repair invoice date",
            "format": "date-time"
          },
          "repairInvoiceNo": {
            "type": "string",
            "description": "Repair nO."
          },
          "repairAmount": {
            "type": "number",
            "description": "Repair amount",
            "format": "double"
          },
          "remark": {
            "type": "string",
            "description": "Remark"
          },
          "created": {
            "type": "string",
            "description": "Created date time,Only apply for response",
            "format": "date-time"
          },
          "updated": {
            "type": "string",
            "description": "Updated date time, Only apply for response",
            "format": "date-time"
          },
          "status": {
            "type": "integer",
            "description": "Active status, 1 = Active, 0 = Void, Only apply for response",
            "format": "int32"
          },
          "page": {
            "type": "integer",
            "description": "Only apply for paging in list api",
            "format": "int32"
          },
          "limit": {
            "type": "integer",
            "description": "Only apply for paging in list api",
            "format": "int32"
          },
          "assetCode": {
            "type": "string",
            "description": "Asset Code ,Only apply for response"
          },
          "assetName": {
            "type": "string",
            "description": "Asset Name ,Only apply for response"
          },
          "repairInvoiceDateTo": {
            "type": "string",
            "description": "Repair Invoice Date start from ,Only apply to filter for list api",
            "format": "date-time"
          },
          "repairInvoiceDateFrom": {
            "type": "string",
            "description": "Repair Invoice Date end to ,Only apply to filter for list api",
            "format": "date-time"
          }
        }
      }
    },
    "securitySchemes": {
      "auth": {
        "type": "http",
        "description": "JWT authentication",
        "in": "header",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}