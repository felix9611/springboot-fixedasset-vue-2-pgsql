{
  "openapi": "3.0.0",
  "paths": {
    "/": {
      "get": {
        "operationId": "AppController_getHello",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/api/users/profile": {
      "get": {
        "operationId": "UsersController_getProfile",
        "summary": "Get User Detail",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "User"
        ]
      }
    },
    "/api/users": {
      "post": {
        "operationId": "UsersController_create",
        "summary": "Create User",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "User"
        ]
      },
      "delete": {
        "operationId": "UsersController_remove",
        "summary": "Void User",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RemoveUserDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "User"
        ]
      }
    },
    "/api/users/{id}": {
      "put": {
        "operationId": "UsersController_update",
        "summary": "Update User",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "User"
        ]
      },
      "get": {
        "operationId": "UsersController_findOneById",
        "summary": "Find By Id",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "User"
        ]
      }
    },
    "/api/users/list": {
      "post": {
        "operationId": "UsersController_findAll",
        "summary": "Listing POST",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FindUserDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "User"
        ]
      },
      "get": {
        "operationId": "UsersController_findAllFE",
        "summary": "Listing GET",
        "parameters": [
          {
            "name": "keyword",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": true,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": true,
            "in": "query",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "User"
        ]
      }
    },
    "/api/users/password/{id}": {
      "put": {
        "operationId": "UsersController_updatePassword",
        "summary": "Update Password",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdataUserPasswordDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "User"
        ]
      }
    },
    "/api/users/password/reset/{id}": {
      "put": {
        "operationId": "UsersController_resetPassword",
        "summary": "Reset Password",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "User"
        ]
      }
    },
    "/api/users/avatar/{id}": {
      "put": {
        "operationId": "UsersController_updateAvatar",
        "summary": "Setting Avatar",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "User"
        ]
      }
    },
    "/api/users/list/count": {
      "get": {
        "operationId": "UsersController_getCount",
        "summary": "Users Count",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "User"
        ]
      }
    },
    "/api/users/userInfo": {
      "get": {
        "operationId": "UsersController_getUserInfo",
        "summary": "User Info",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "User"
        ]
      }
    },
    "/api/home": {
      "post": {
        "operationId": "HomeController_create",
        "summary": "Add",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateHomeDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Home"
        ]
      },
      "delete": {
        "operationId": "HomeController_remove",
        "summary": "Remove",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RemoveHomeDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Home"
        ]
      },
      "get": {
        "operationId": "HomeController_findAll",
        "summary": "List",
        "parameters": [
          {
            "name": "keyword",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "category",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": true,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": true,
            "in": "query",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Home"
        ]
      }
    },
    "/api/home/{id}": {
      "put": {
        "operationId": "HomeController_update",
        "summary": "Update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateHomeDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Home"
        ]
      },
      "get": {
        "operationId": "HomeController_findOneById",
        "summary": "Find By ID",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Home"
        ]
      }
    },
    "/api/home/list/count": {
      "get": {
        "operationId": "HomeController_getCount",
        "summary": "Count",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Home"
        ]
      }
    },
    "/api/upload": {
      "post": {
        "operationId": "UploadController_uploadFile",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "upload": {
                    "type": "string",
                    "format": "binary"
                  }
                },
                "$ref": "#/components/schemas/"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        }
      }
    },
    "/api/auth/login": {
      "post": {
        "operationId": "AuthController_login",
        "summary": "Login",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginUserDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "User Auth"
        ]
      }
    },
    "/api/auth/logout": {
      "post": {
        "operationId": "AuthController_logout",
        "summary": "Logout",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "User Auth"
        ]
      }
    },
    "/api/test/new": {
      "post": {
        "operationId": "TestController_create",
        "summary": "Create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Test"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Test"
        ]
      }
    },
    "/api/test/update/{id}": {
      "put": {
        "operationId": "TestController_update",
        "summary": "Update by Id",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Test"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Test"
        ]
      }
    },
    "/api/test/remove/{id}": {
      "delete": {
        "operationId": "TestController_remove",
        "summary": "Void by Id",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Test"
        ]
      }
    },
    "/api/test/batch/remove": {
      "delete": {
        "operationId": "TestController_removeBatch",
        "summary": "Batch for Void",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Test"
        ]
      }
    },
    "/api/test/{id}": {
      "get": {
        "operationId": "TestController_getOne",
        "summary": "Get by Id",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Test"
        ]
      }
    },
    "/api/code/type/create": {
      "post": {
        "operationId": "CodeTypeController_createOne",
        "summary": "Create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CodeTypeCreatedDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Code Type"
        ]
      }
    },
    "/api/code/type/update": {
      "post": {
        "operationId": "CodeTypeController_updateOne",
        "summary": "Update",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CodeType"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Code Type"
        ]
      }
    },
    "/api/code/type/listPage": {
      "post": {
        "operationId": "CodeTypeController_listPage",
        "summary": "Page Listing",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CodeTypeFindDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Code Type"
        ]
      }
    },
    "/api/code/type/void/{id}": {
      "delete": {
        "operationId": "CodeTypeController_voidOne",
        "summary": "Void by Id",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Code Type"
        ]
      }
    },
    "/api/code/type/{id}": {
      "get": {
        "operationId": "CodeTypeController_getOne",
        "summary": "Get by Id",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Code Type"
        ]
      }
    },
    "/api/code/type/findByType": {
      "post": {
        "operationId": "CodeTypeController_findByType",
        "summary": "Find by the type",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CodeTypeFindByTypeDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Code Type"
        ]
      }
    },
    "/api/sys/menu/create": {
      "post": {
        "operationId": "SysMenuController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SysMenu"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "System Menu"
        ]
      }
    },
    "/api/sys/menu/{id}": {
      "get": {
        "operationId": "SysMenuController_getOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "System Menu"
        ]
      }
    },
    "/api/sys/menu/void/{id}": {
      "delete": {
        "operationId": "SysMenuController_voidOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "System Menu"
        ]
      }
    },
    "/api/sys/menu/get/All": {
      "get": {
        "operationId": "SysMenuController_getAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "System Menu"
        ]
      }
    },
    "/api/sys/menu/update": {
      "post": {
        "operationId": "SysMenuController_update",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SysMenu"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "System Menu"
        ]
      }
    },
    "/api/sys/menu/list": {
      "post": {
        "operationId": "SysMenuController_listAll",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SysMenu"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "System Menu"
        ]
      }
    },
    "/api/sys/role/create": {
      "post": {
        "operationId": "SysRoleController_createRole",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SysRole"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "System Roles"
        ]
      }
    },
    "/api/sys/role/update": {
      "post": {
        "operationId": "SysRoleController_updateRole",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SysRole"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "System Roles"
        ]
      }
    },
    "/api/sys/role/get/all": {
      "get": {
        "operationId": "SysRoleController_getAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "System Roles"
        ]
      }
    },
    "/api/sys/role/list": {
      "post": {
        "operationId": "SysRoleController_listOnPages",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SysRole"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "System Roles"
        ]
      }
    },
    "/api/sys/role/pages": {
      "post": {
        "operationId": "SysRoleController_getPagesByRole",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "System Roles"
        ]
      }
    },
    "/api/sys/role/void/{id}": {
      "delete": {
        "operationId": "SysRoleController_voidOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "System Roles"
        ]
      }
    },
    "/api/sys/role/info/{id}": {
      "get": {
        "operationId": "SysRoleController_infoOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "System Roles"
        ]
      }
    },
    "/api/sys/role/user/pages": {
      "get": {
        "operationId": "SysRoleController_getPagesByUser",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "System Roles"
        ]
      }
    },
    "/api/sys/role/all/roles": {
      "post": {
        "operationId": "SysRoleController_getAllRole",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "System Roles"
        ]
      }
    },
    "/api/sys/role/menu/handle/{roleId}": {
      "get": {
        "operationId": "SysRoleController_menuhandle",
        "parameters": [
          {
            "name": "roleId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "System Roles"
        ]
      }
    },
    "/api/sys/role/menu/handle/update/{roleId}": {
      "post": {
        "operationId": "SysRoleController_menuhandleUpdate",
        "parameters": [
          {
            "name": "roleId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "System Roles"
        ]
      }
    },
    "/api/sys/role/handle/update/{userId}": {
      "post": {
        "operationId": "SysRoleController_roleshandleUpdate",
        "parameters": [
          {
            "name": "userId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "System Roles"
        ]
      }
    },
    "/api/sys/role/user/{userId}": {
      "get": {
        "operationId": "SysRoleController_getUserRole",
        "parameters": [
          {
            "name": "userId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "System Roles"
        ]
      }
    },
    "/api/asset/type/create": {
      "post": {
        "operationId": "AssetTypeController_create",
        "summary": "Create Type",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssetTypeCreateDTO"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "This record has been successfully created.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssetType"
                }
              }
            }
          }
        },
        "tags": [
          "Assets Type"
        ]
      }
    },
    "/api/asset/type/batch/create": {
      "post": {
        "operationId": "AssetTypeController_batchCreate",
        "summary": "Batching Create Type",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AssetTypeCreateDTO"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "These record has been successfully batch created.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AssetType"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Assets Type"
        ]
      }
    },
    "/api/asset/type/listAll": {
      "post": {
        "operationId": "AssetTypeController_listAllPage",
        "summary": "List Type by page",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssetTypeFindDTO"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "These record has been successfully listing.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/listAssetType"
                }
              }
            }
          }
        },
        "tags": [
          "Assets Type"
        ]
      }
    },
    "/api/asset/type/get/{id}": {
      "get": {
        "operationId": "AssetTypeController_getOneData",
        "summary": "Get one by Id",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Assets Type"
        ]
      }
    },
    "/api/asset/type/update": {
      "post": {
        "operationId": "AssetTypeController_updateOne",
        "summary": "Update Type",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssetType"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "These record has been successfully update.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssetType"
                }
              }
            }
          }
        },
        "tags": [
          "Assets Type"
        ]
      }
    },
    "/api/asset/type/remove/{id}": {
      "delete": {
        "operationId": "AssetTypeController_voidOneData",
        "summary": "Void one by Id",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "These record has been successfully void."
          }
        },
        "tags": [
          "Assets Type"
        ]
      }
    },
    "/api/asset/type/getAll": {
      "get": {
        "operationId": "AssetTypeController_getAll",
        "summary": "Get All Type as active",
        "parameters": [],
        "responses": {
          "201": {
            "description": "These record has been successfully list all.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AssetType"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Assets Type"
        ]
      }
    },
    "/api/location/create": {
      "post": {
        "operationId": "LocationController_createOne",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Location"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Location"
        ]
      }
    },
    "/api/location/update": {
      "post": {
        "operationId": "LocationController_updateOne",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Location"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Location"
        ]
      }
    },
    "/api/location/GetAll": {
      "get": {
        "operationId": "LocationController_getAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Location"
        ]
      }
    },
    "/api/location/{id}": {
      "get": {
        "operationId": "LocationController_getOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Location"
        ]
      }
    },
    "/api/location/void/{id}": {
      "delete": {
        "operationId": "LocationController_voidOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Location"
        ]
      }
    },
    "/api/location/listAll": {
      "post": {
        "operationId": "LocationController_listAll",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Location"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Location"
        ]
      }
    },
    "/api/location/batch/create": {
      "post": {
        "operationId": "LocationController_batchCreate",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Location"
        ]
      }
    },
    "/api/department/getAll": {
      "get": {
        "operationId": "DepartmentController_getAll",
        "summary": "Get All",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Department"
        ]
      }
    },
    "/api/department/create": {
      "post": {
        "operationId": "DepartmentController_createOne",
        "summary": "Create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/departmentCreateDTO"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Department"
        ]
      }
    },
    "/api/department/update": {
      "post": {
        "operationId": "DepartmentController_updateOne",
        "summary": "Update",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Department"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Department"
        ]
      }
    },
    "/api/department/{id}": {
      "get": {
        "operationId": "DepartmentController_getOne",
        "summary": "Get by ID",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Department"
        ]
      }
    },
    "/api/department/void/{id}": {
      "delete": {
        "operationId": "DepartmentController_voidOne",
        "summary": "Void by ID",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Department"
        ]
      }
    },
    "/api/department/listAll": {
      "post": {
        "operationId": "DepartmentController_listAll",
        "summary": "List by Page ",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/departmentFindDTO"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Department"
        ]
      }
    },
    "/api/department/batch/create": {
      "post": {
        "operationId": "DepartmentController_batchCreate",
        "summary": "Batch to create ",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/departmentCreateDTO"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Department"
        ]
      }
    },
    "/api/vendor/getAll": {
      "get": {
        "operationId": "VendorController_getAll",
        "summary": "Get All",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Vendor"
        ]
      }
    },
    "/api/vendor/listAll": {
      "post": {
        "operationId": "VendorController_listAll",
        "summary": "Void by ID",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VendorFindDTO"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Vendor"
        ]
      }
    },
    "/api/vendor/{id}": {
      "get": {
        "operationId": "VendorController_getOne",
        "summary": "Get by ID",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Vendor"
        ]
      }
    },
    "/api/vendor/create": {
      "post": {
        "operationId": "VendorController_createOne",
        "summary": "Create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/vendorCreateDTO"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Vendor"
        ]
      }
    },
    "/api/vendor/update": {
      "post": {
        "operationId": "VendorController_updateOne",
        "summary": "Update",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Vendor"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Vendor"
        ]
      }
    },
    "/api/vendor/void/{id}": {
      "delete": {
        "operationId": "VendorController_voidOne",
        "summary": "Void by ID",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Vendor"
        ]
      }
    },
    "/api/vendor/batch/create": {
      "post": {
        "operationId": "VendorController_batchCreate",
        "summary": "Batch Create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/vendorCreateDTO"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Vendor"
        ]
      }
    },
    "/api/asset/list/list": {
      "post": {
        "operationId": "AssetListController_list",
        "summary": "List Asset",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FindAssetListAll"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Assets"
        ]
      }
    },
    "/api/asset/list/listAll": {
      "post": {
        "operationId": "AssetListController_listAll",
        "summary": "Listing with page",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FindAssetList"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Listing by Page",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssetLists"
                }
              }
            }
          }
        },
        "tags": [
          "Assets"
        ]
      }
    },
    "/api/asset/list/{id}": {
      "get": {
        "operationId": "AssetListController_getOne",
        "summary": "Get one by id",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Assets"
        ]
      }
    },
    "/api/asset/list/code/{assetCode}": {
      "get": {
        "operationId": "AssetListController_findByCode",
        "summary": "Get one by asset code",
        "parameters": [
          {
            "name": "assetCode",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Assets"
        ]
      }
    },
    "/api/asset/list/create": {
      "post": {
        "operationId": "AssetListController_createOne",
        "summary": "Create Asset",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssetList"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Assets"
        ]
      }
    },
    "/api/asset/list/update": {
      "post": {
        "operationId": "AssetListController_updateOne",
        "summary": "Update Asset",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssetList"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Assets"
        ]
      }
    },
    "/api/asset/list/findAsset": {
      "post": {
        "operationId": "AssetListController_findAsset",
        "summary": "Find Asset",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssetList"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Assets"
        ]
      }
    },
    "/api/asset/list/void/{id}": {
      "delete": {
        "operationId": "AssetListController_voidOne",
        "summary": "Void Asset by id",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Assets"
        ]
      }
    },
    "/api/asset/list/writeoff/form": {
      "post": {
        "operationId": "AssetListController_writteOffPrcoess",
        "summary": "Write Off Asset",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WriteOff"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Assets"
        ]
      }
    },
    "/api/asset/list/images/{assetId}": {
      "get": {
        "operationId": "AssetListController_findFile",
        "summary": "Get Asset Image as one asset",
        "parameters": [
          {
            "name": "assetId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Assets"
        ]
      }
    },
    "/api/asset/list/images/void/{id}": {
      "delete": {
        "operationId": "AssetListController_voidFile",
        "summary": "Void asset images",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Assets"
        ]
      }
    },
    "/api/asset/list/images/save": {
      "post": {
        "operationId": "AssetListController_saveImage",
        "summary": "Save Asset Image for one asset",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssetFileImport"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Assets"
        ]
      }
    },
    "/api/asset/list/import": {
      "post": {
        "operationId": "AssetListController_importData",
        "summary": "Import List of asset",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ImportAsset"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Assets"
        ]
      }
    },
    "/api/auth/record/create": {
      "post": {
        "operationId": "LoginRecordController_createOne",
        "summary": "Create Login Record",
        "description": "This for create by the user when login, cannot API to create when not login",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRecord"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Auth Login Record"
        ]
      }
    },
    "/api/auth/record/all/{username}": {
      "post": {
        "operationId": "LoginRecordController_findAle",
        "summary": "Get All",
        "parameters": [
          {
            "name": "username",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Auth Login Record"
        ]
      }
    },
    "/api/invrecord/list": {
      "post": {
        "operationId": "InvRecordController_listData",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/invrecordList"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Record for Inv"
        ]
      }
    },
    "/api/stocktake/create": {
      "post": {
        "operationId": "StockTakeController_createOne",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StockTake"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Stock Take"
        ]
      }
    },
    "/api/stocktake/item": {
      "post": {
        "operationId": "StockTakeController_itemStockTake",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StockTakeItem"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Stock Take"
        ]
      }
    },
    "/api/stocktake/item/listAll": {
      "post": {
        "operationId": "StockTakeController_itemListAll",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StockTakeItem"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Stock Take"
        ]
      }
    },
    "/api/stocktake/listAll": {
      "post": {
        "operationId": "StockTakeController_listAll",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StockTake"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Stock Take"
        ]
      }
    },
    "/api/stocktake/{id}": {
      "get": {
        "operationId": "StockTakeController_getOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Stock Take"
        ]
      }
    },
    "/api/stocktake/void/{id}": {
      "delete": {
        "operationId": "StockTakeController_voidOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Stock Take"
        ]
      }
    },
    "/api/stocktake/finish/{id}": {
      "post": {
        "operationId": "StockTakeController_finishOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Stock Take"
        ]
      }
    }
  },
  "info": {
    "title": "API",
    "description": "API Document",
    "version": "1.0",
    "contact": {}
  },
  "tags": [],
  "servers": [
    {
      "url": "http://localhost:8450"
    }
  ],
  "components": {
    "securitySchemes": {
      "bearer": {
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "type": "http"
      }
    },
    "schemas": {
      "CreateUserDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "avatar": {
            "type": "string"
          },
          "roles": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "intro": {
            "type": "string"
          },
          "status": {
            "type": "boolean"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "name",
          "password",
          "avatar",
          "roles",
          "intro",
          "status",
          "createdAt"
        ]
      },
      "RemoveUserDto": {
        "type": "object",
        "properties": {
          "ids": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "ids"
        ]
      },
      "UpdateUserDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "avatar": {
            "type": "string"
          },
          "roles": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "intro": {
            "type": "string"
          },
          "status": {
            "type": "boolean"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "name",
          "avatar",
          "roles",
          "intro",
          "status",
          "updatedAt"
        ]
      },
      "FindUserDto": {
        "type": "object",
        "properties": {
          "keyword": {
            "type": "string"
          },
          "page": {
            "type": "number"
          },
          "limit": {
            "type": "number"
          }
        },
        "required": [
          "page",
          "limit"
        ]
      },
      "UpdataUserPasswordDto": {
        "type": "object",
        "properties": {
          "oldPassword": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "rePassword": {
            "type": "string"
          }
        },
        "required": [
          "oldPassword",
          "password",
          "rePassword"
        ]
      },
      "CreateHomeDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "intro": {
            "type": "string"
          },
          "status": {
            "type": "boolean"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "name",
          "intro",
          "status",
          "createdAt"
        ]
      },
      "RemoveHomeDto": {
        "type": "object",
        "properties": {
          "ids": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "ids"
        ]
      },
      "UpdateHomeDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "intro": {
            "type": "string"
          },
          "status": {
            "type": "boolean"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "name",
          "intro",
          "status",
          "updatedAt"
        ]
      },
      "LoginUserDto": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "description": "The Login usernme",
            "example": "ABC"
          },
          "password": {
            "type": "string",
            "description": "The Login Password",
            "example": "123456"
          }
        },
        "required": [
          "username",
          "password"
        ]
      },
      "Test": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "example": 1,
            "description": "The id PK number"
          },
          "code": {
            "type": "string",
            "example": "ABC",
            "description": "Testing for CODE"
          },
          "testOne": {
            "type": "string",
            "example": "ABC",
            "description": "Testing for string"
          },
          "testTwo": {
            "type": "number",
            "example": 1,
            "description": "Testing for number"
          },
          "testJson": {
            "type": "number",
            "example": {},
            "description": "Testing JSON/Array"
          },
          "status": {
            "type": "number",
            "example": 1,
            "description": "This will default 0 (Void) or 1 (Active)"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string",
            "description": "This will auto save"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "description": "This will auto save"
          }
        },
        "required": [
          "id",
          "status"
        ]
      },
      "CodeTypeCreatedDto": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "example": "Test",
            "description": "The type for category"
          },
          "valueCode": {
            "type": "string",
            "example": "TestD",
            "description": "The value code"
          },
          "valueName": {
            "type": "string",
            "example": "Test Da",
            "description": "The value name"
          }
        },
        "required": [
          "type",
          "valueCode",
          "valueName"
        ]
      },
      "CodeType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "example": 1,
            "description": "The id PK number"
          },
          "type": {
            "type": "string",
            "example": "Test",
            "description": "The type for category"
          },
          "valueCode": {
            "type": "string",
            "example": "TestD",
            "description": "The value code"
          },
          "valueName": {
            "type": "string",
            "example": "Test Da",
            "description": "The value name"
          },
          "status": {
            "type": "number",
            "example": 1,
            "description": "The status in 1 (Active) or 0 (Void)"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string",
            "example": "2022-12-11T01:49:14.286Z",
            "description": "This will auto save"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "example": "2022-12-11T01:49:14.286Z",
            "description": "This will auto save"
          }
        },
        "required": [
          "id",
          "type",
          "valueCode",
          "valueName"
        ]
      },
      "CodeTypeFindDto": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "example": "Test",
            "description": "The type for category"
          },
          "valueCode": {
            "type": "string",
            "example": "TestD",
            "description": "The value code"
          },
          "valueName": {
            "type": "string",
            "example": "Test Da",
            "description": "The value name"
          },
          "limit": {
            "type": "number",
            "example": 10,
            "description": "The page of listing"
          },
          "page": {
            "type": "number",
            "example": 1,
            "description": "The page items limit of listing"
          }
        },
        "required": [
          "limit",
          "page"
        ]
      },
      "CodeTypeFindByTypeDto": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "example": "Test",
            "description": "The type for category"
          }
        }
      },
      "SysMenu": {
        "type": "object",
        "properties": {
          "updatedAt": {
            "format": "date-time",
            "type": "string",
            "description": "This will auto save"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "description": "This will auto save"
          }
        }
      },
      "SysRole": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "example": 1,
            "description": "The id PK number"
          },
          "code": {
            "type": "string",
            "example": "A",
            "description": "The role code"
          },
          "name": {
            "type": "string",
            "example": "A",
            "description": "The role page"
          },
          "pages": {
            "type": "object",
            "example": [
              2,
              3,
              5
            ],
            "description": "The role page of menu PK ids"
          },
          "remark": {
            "type": "string",
            "example": "",
            "description": "The role remark"
          },
          "status": {
            "type": "number",
            "example": 1,
            "description": "This will default 0 or 1"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string",
            "description": "This will auto save"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "description": "This will auto save"
          }
        },
        "required": [
          "id",
          "code",
          "name",
          "pages",
          "status"
        ]
      },
      "AssetTypeCreateDTO": {
        "type": "object",
        "properties": {
          "typeCode": {
            "type": "string",
            "example": "Test",
            "description": "The asset type code"
          },
          "typeName": {
            "type": "string",
            "example": "Testing",
            "description": "The asset type name"
          },
          "typeOtherName": {
            "type": "object",
            "example": {},
            "description": "The asset type other name by json"
          },
          "remark": {
            "type": "string",
            "example": "Testing",
            "description": "The asset type other remark"
          }
        },
        "required": [
          "typeCode",
          "typeName"
        ]
      },
      "AssetType": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "example": 1,
            "description": "The id PK number"
          },
          "typeCode": {
            "type": "string",
            "example": "Test",
            "description": "The asset type code"
          },
          "typeName": {
            "type": "string",
            "example": "Testing",
            "description": "The asset type name"
          },
          "typeOtherName": {
            "type": "object",
            "example": {},
            "description": "The asset type other name by json"
          },
          "remark": {
            "type": "string",
            "example": "Testing",
            "description": "The asset type other remark"
          },
          "status": {
            "type": "number",
            "example": 1,
            "description": "The status in 1 (Active) or 0 (Void)"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "example": "2022-12-11T01:49:14.286Z",
            "description": "This will auto save"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string",
            "example": "2022-12-11T01:49:14.286Z",
            "description": "This will auto save"
          }
        },
        "required": [
          "id",
          "typeCode",
          "typeName"
        ]
      },
      "AssetTypeFindDTO": {
        "type": "object",
        "properties": {
          "typeCode": {
            "type": "string",
            "example": "Test",
            "description": "The asset type code"
          },
          "typeName": {
            "type": "string",
            "example": "Testing",
            "description": "The asset type name"
          },
          "limit": {
            "type": "number",
            "example": 10,
            "description": "The page of listing"
          },
          "page": {
            "type": "number",
            "example": 1,
            "description": "The page items limit of listing"
          }
        },
        "required": [
          "typeCode",
          "typeName",
          "limit",
          "page"
        ]
      },
      "listAssetType": {
        "type": "object",
        "properties": {
          "rows": {
            "example": [],
            "description": "Listing Data",
            "type": "array",
            "items": {
              "type": "object"
            }
          },
          "count": {
            "type": "number",
            "example": 20,
            "description": "Count all record"
          }
        },
        "required": [
          "rows",
          "count"
        ]
      },
      "Location": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "example": 1,
            "description": "The id PK number"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string",
            "description": "This will auto save"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "description": "This will auto save"
          }
        },
        "required": [
          "id"
        ]
      },
      "departmentCreateDTO": {
        "type": "object",
        "properties": {
          "deptCode": {
            "type": "string",
            "example": "Test",
            "description": "The department code"
          },
          "deptName": {
            "type": "string",
            "example": "Test",
            "description": "The department name"
          },
          "remark": {
            "type": "string",
            "example": "",
            "description": "Remark"
          }
        },
        "required": [
          "deptCode",
          "deptName"
        ]
      },
      "Department": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "example": 1,
            "description": "The id PK number"
          },
          "deptCode": {
            "type": "string",
            "example": "Test",
            "description": "The department code"
          },
          "deptName": {
            "type": "string",
            "example": "Test",
            "description": "The department name"
          },
          "remark": {
            "type": "string",
            "example": "",
            "description": "Remark"
          },
          "flexData": {
            "type": "object",
            "example": {},
            "description": "The other information by json or array"
          },
          "status": {
            "type": "number",
            "example": 1,
            "description": "This will default 0 or 1"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string",
            "description": "This will auto save"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "description": "This will auto save"
          }
        },
        "required": [
          "id",
          "deptCode",
          "deptName",
          "status"
        ]
      },
      "departmentFindDTO": {
        "type": "object",
        "properties": {
          "deptCode": {
            "type": "string",
            "example": "Test",
            "description": "The department code"
          },
          "deptName": {
            "type": "string",
            "example": "Test",
            "description": "The department name"
          },
          "limit": {
            "type": "number",
            "example": 10,
            "description": "The page of listing"
          },
          "page": {
            "type": "number",
            "example": 1,
            "description": "The page items limit of listing"
          }
        },
        "required": [
          "deptCode",
          "deptName",
          "limit",
          "page"
        ]
      },
      "VendorFindDTO": {
        "type": "object",
        "properties": {
          "vendorCode": {
            "type": "string",
            "example": "Test",
            "description": "Vendor's  Code"
          },
          "vendorName": {
            "type": "string",
            "example": "Test LTD",
            "description": "Vendor's  Name"
          },
          "limit": {
            "type": "number",
            "example": 10,
            "description": "The page of listing"
          },
          "page": {
            "type": "number",
            "example": 1,
            "description": "The page items limit of listing"
          }
        },
        "required": [
          "vendorCode",
          "vendorName",
          "limit",
          "page"
        ]
      },
      "vendorCreateDTO": {
        "type": "object",
        "properties": {
          "vendorCode": {
            "type": "string",
            "example": "Test",
            "description": "Vendor's  Code"
          },
          "vendorName": {
            "type": "string",
            "example": "Test LTD",
            "description": "Vendor's  Name"
          },
          "vendorOtherName": {
            "type": "object",
            "example": "TEST",
            "description": "Vendor's Other Name"
          },
          "type": {
            "type": "string",
            "example": "TEST",
            "description": "Vendor's Type"
          },
          "email": {
            "type": "string",
            "example": "aa@abc.com",
            "description": "Vendor's Contact Email Addres"
          },
          "phone": {
            "type": "string",
            "example": "67891258",
            "description": "Vendor's Contact Phone Number"
          },
          "fax": {
            "type": "string",
            "example": "",
            "description": "Fax Number"
          },
          "address": {
            "type": "string",
            "example": "Kowloon, HK",
            "description": "Vendor's Address"
          },
          "contactPerson": {
            "type": "string",
            "example": "",
            "description": "Vendor's Contact Person"
          },
          "remark": {
            "type": "string",
            "example": "",
            "description": "Remark"
          },
          "flexData": {
            "type": "object",
            "example": {},
            "description": "Addon Data"
          }
        },
        "required": [
          "vendorCode",
          "vendorName",
          "type",
          "email",
          "phone",
          "address",
          "contactPerson"
        ]
      },
      "Vendor": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "example": 1,
            "description": "The id PK number"
          },
          "vendorCode": {
            "type": "string",
            "example": "Test",
            "description": "Vendor's  Code"
          },
          "vendorName": {
            "type": "string",
            "example": "Test LTD",
            "description": "Vendor's  Name"
          },
          "vendorOtherName": {
            "type": "object",
            "example": "TEST",
            "description": "Vendor's Other Name"
          },
          "type": {
            "type": "string",
            "example": "TEST",
            "description": "Vendor's Type"
          },
          "email": {
            "type": "string",
            "example": "aa@abc.com",
            "description": "Vendor's Contact Email Addres"
          },
          "phone": {
            "type": "string",
            "example": "67891258",
            "description": "Vendor's Contact Phone Number"
          },
          "fax": {
            "type": "string",
            "example": "",
            "description": "Fax Number"
          },
          "address": {
            "type": "string",
            "example": "Kowloon, HK",
            "description": "Vendor's Address"
          },
          "contactPerson": {
            "type": "string",
            "example": "",
            "description": "Vendor's Contact Person"
          },
          "remark": {
            "type": "string",
            "example": "",
            "description": "Remark"
          },
          "flexData": {
            "type": "object",
            "example": {},
            "description": "Addon Data"
          },
          "status": {
            "type": "number",
            "example": 1,
            "description": "This will default 0 (Void) or 1 (Active)"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string",
            "description": "This will auto save"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "description": "This will auto save"
          }
        },
        "required": [
          "id",
          "vendorCode",
          "vendorName",
          "type",
          "email",
          "phone",
          "address",
          "contactPerson"
        ]
      },
      "FindAssetListAll": {
        "type": "object",
        "properties": {
          "status": {
            "type": "number",
            "example": 1,
            "description": "The asset status number"
          }
        },
        "required": [
          "status"
        ]
      },
      "FindAssetList": {
        "type": "object",
        "properties": {
          "page": {
            "type": "number",
            "example": 1,
            "description": "The page of listing"
          },
          "limit": {
            "type": "number",
            "example": 10,
            "description": "The page items limit of listing"
          },
          "assetCode": {
            "type": "string",
            "example": "000001",
            "description": "The Asset code"
          },
          "assetName": {
            "type": "string",
            "example": "ABC",
            "description": "The Asset name"
          },
          "typeId": {
            "type": "number",
            "example": 1,
            "description": "The Asset type id number"
          },
          "placeId": {
            "type": "number",
            "example": 1,
            "description": "The asset store on where the place id number"
          },
          "deptId": {
            "type": "number",
            "example": 1,
            "description": "The asset by which the department id number"
          },
          "buyDate": {
            "type": "string",
            "example": "2022-12-10 11:20",
            "description": "This asset buy at the date and time"
          }
        },
        "required": [
          "page",
          "limit"
        ]
      },
      "AssetList": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "example": 1,
            "description": "The Asset id PK number"
          },
          "assetCode": {
            "type": "string",
            "example": "000001",
            "description": "The Asset code"
          },
          "assetName": {
            "type": "string",
            "example": "ABC",
            "description": "The Asset name"
          },
          "typeId": {
            "type": "number",
            "example": 1,
            "description": "The Asset type id number"
          },
          "unit": {
            "type": "string",
            "example": "Box",
            "description": "This asset item how to unit term"
          },
          "buyDate": {
            "type": "string",
            "example": "2022-12-11T01:49:14.286Z",
            "description": "This asset buy at the date and time"
          },
          "description": {
            "type": "string",
            "example": "This is for test",
            "description": "This asset detail"
          },
          "sponsor": {
            "type": "number",
            "example": 0,
            "description": "This sponsor type number"
          },
          "sponsorName": {
            "type": "string",
            "example": "Tom",
            "description": "This sponsor name"
          },
          "cost": {
            "type": "string",
            "example": "300",
            "description": "This asset buy cost"
          },
          "serialNumber": {
            "type": "string",
            "example": "17516987",
            "description": "This asset Serial Number"
          },
          "invoiceNo": {
            "type": "string",
            "example": "T00001",
            "description": "Buy Invoice Sheet Number"
          },
          "invoiceDate": {
            "type": "string",
            "example": "2022-12-11T01:49:14.286Z",
            "description": "Buy Invoice Sheet Iussed Date and time"
          },
          "placeId": {
            "type": "number",
            "example": 5,
            "description": "The asset store on where the place id number"
          },
          "deptId": {
            "type": "number",
            "example": 1,
            "description": "The asset by which the department id number"
          },
          "staffId": {
            "type": "string",
            "example": "A001",
            "description": "The operation staff UUID"
          },
          "vendorId": {
            "type": "number",
            "example": 2,
            "description": "The asset vendor code"
          },
          "remark": {
            "type": "string",
            "example": "Testing",
            "description": "The asset other information remark"
          },
          "flexData": {
            "type": "object",
            "example": {},
            "description": "The asset other information by json or array"
          },
          "status": {
            "type": "number",
            "example": 1,
            "description": "This will default 0 or 1"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string",
            "example": "2022-12-11T01:49:14.286Z",
            "description": "This will auto save"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "example": "2022-12-11T01:49:14.286Z",
            "description": "This will auto save"
          }
        },
        "required": [
          "id",
          "assetCode",
          "assetName",
          "typeId",
          "unit",
          "sponsor",
          "serialNumber",
          "placeId",
          "deptId",
          "status"
        ]
      },
      "AssetLists": {
        "type": "object",
        "properties": {
          "rows": {
            "example": [],
            "description": "Listing Data",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AssetList"
            }
          },
          "count": {
            "type": "number",
            "example": 20,
            "description": "Count all record"
          }
        },
        "required": [
          "rows",
          "count"
        ]
      },
      "WriteOff": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "example": 1,
            "description": "The id PK number"
          },
          "assetId": {
            "type": "number",
            "example": 1,
            "description": "The Asset id PK number"
          },
          "lastPlaceId": {
            "type": "number",
            "example": 1,
            "description": "The Asset last place on the place id PK number"
          },
          "reason": {
            "type": "string",
            "example": "Finish Testing",
            "description": "The Asset write off reason"
          },
          "lastDay": {
            "format": "date-time",
            "type": "string",
            "description": "The Asset write off date stamp"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string",
            "description": "This will auto save"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "description": "This will auto save"
          }
        },
        "required": [
          "id",
          "assetId",
          "lastPlaceId",
          "reason",
          "lastDay"
        ]
      },
      "AssetFileImport": {
        "type": "object",
        "properties": {
          "assetId": {
            "type": "number",
            "example": 1,
            "description": "The Asset id PK number"
          },
          "fileList": {
            "type": "any",
            "example": [
              {
                "dataBase64": "wfsqwawa8s85a5sadd13a2===",
                "fileName": "test.png"
              }
            ],
            "description": "The Asset image file listing"
          }
        },
        "required": [
          "assetId",
          "fileList"
        ]
      },
      "ImportAsset": {
        "type": "object",
        "properties": {
          "assetName": {
            "type": "string",
            "example": "ABC",
            "description": "The Asset name"
          },
          "typeCode": {
            "type": "string",
            "example": "A",
            "description": "The Asset type code"
          },
          "typeName": {
            "type": "string",
            "example": "TypeA",
            "description": "The Asset type name"
          },
          "unit": {
            "type": "string",
            "example": "Box",
            "description": "This asset item how to unit term"
          },
          "buyDate": {
            "type": "string",
            "example": "2022-10-28 11:30",
            "description": "This asset buy at the date and time"
          },
          "description": {
            "type": "string",
            "example": "This is for test",
            "description": "This asset detail"
          },
          "cost": {
            "type": "string",
            "example": "350",
            "description": "This asset buy cost"
          },
          "serialNum": {
            "type": "string",
            "example": "17516987",
            "description": "This asset Serial Number"
          },
          "invoiceNo": {
            "type": "string",
            "example": "AA00001",
            "description": "Buy Invoice Sheet Number"
          },
          "invoiceDate": {
            "type": "string",
            "example": "2022-10-28 11:30",
            "description": "Buy Invoice Sheet Iussed Date and time"
          },
          "deptCode": {
            "type": "string",
            "example": "A",
            "description": "The asset by which the department code"
          },
          "deptName": {
            "type": "string",
            "example": "A Department",
            "description": "The asset by which the department name"
          },
          "placeCode": {
            "type": "string",
            "example": "AB",
            "description": "The asset store on where the place code"
          },
          "placeName": {
            "type": "string",
            "example": "AB Room",
            "description": "The asset store on where the place name"
          },
          "vendorCode": {
            "type": "string",
            "example": "CBA",
            "description": "The asset vendor code"
          },
          "vendorName": {
            "type": "string",
            "example": "CBA Ltd",
            "description": "The asset vendor name"
          },
          "remark": {
            "type": "string",
            "example": "Testing",
            "description": "The asset other information remark"
          }
        },
        "required": [
          "assetName",
          "typeCode",
          "typeName",
          "unit",
          "serialNum",
          "deptCode",
          "deptName",
          "placeCode",
          "placeName"
        ]
      },
      "LoginRecord": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "example": 1,
            "description": "The id PK number"
          }
        },
        "required": [
          "id"
        ]
      },
      "invrecordList": {
        "type": "object",
        "properties": {
          "limit": {
            "type": "number",
            "example": 1,
            "description": "The page of listing"
          },
          "page": {
            "type": "number",
            "example": 10,
            "description": "The page items limit of listing"
          },
          "createdFrom": {
            "format": "date-time",
            "type": "string",
            "description": "The date range to find the create date start at"
          },
          "createdTo": {
            "format": "date-time",
            "type": "string",
            "description": "The date range to find the create date end at"
          }
        },
        "required": [
          "limit",
          "page",
          "createdFrom",
          "createdTo"
        ]
      },
      "StockTake": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "example": 1,
            "description": "The id PK number"
          },
          "finishTime": {
            "format": "date-time",
            "type": "string",
            "description": "The end datetime for stock take"
          },
          "status": {
            "type": "number",
            "example": 1,
            "description": "This will default 0 (Void) or 1 (Active)"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string",
            "description": "This will auto save"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "description": "This will auto save"
          }
        },
        "required": [
          "id",
          "status"
        ]
      },
      "StockTakeItem": {
        "type": "object",
        "properties": {}
      }
    }
  }
}
